[
  {
    "path": "posts/2021-02-11_twitter_vsml_from_rtweet/",
    "title": "Creating Twitter Networks with vosonSML using rtweet Data",
    "description": "Simple guide to collecting data with rtweet and generating networks with vosonSML.",
    "author": [
      {
        "name": "Francisca Borquez",
        "url": {}
      },
      {
        "name": "Bryan Gertzel",
        "url": {}
      }
    ],
    "date": "2021-02-11",
    "categories": [
      "rstats",
      "twitter",
      "vosonSML",
      "rtweet",
      "networks"
    ],
    "contents": "\r\n\r\nContents\r\nIntroduction\r\nAPI Authentication\r\n\r\nTwitter Data Collection with rtweet\r\nSearch Collection\r\nSave the Data\r\n\r\nCreating Networks with vosonSML\r\nRead the Data\r\nPrepare the Data\r\nCreate the Network\r\n\r\n\r\nIntroduction\r\nSocial media platforms are a rich resource for Social Network data. Twitter is a highly popular public platform for social commentary that, like most social media supporting third-party applications, allow software to access and retrieve it’s data via Application Programming Interfaces or API’s. Because of its popularity with individuals and communities around the world, the ready availability of its data, and low barrier for entry, Twitter has become of great interest as a data source for online empirical research.\r\nThere have been many pieces of software developed across programming languages and environments to access the Twitter API. Within the R ecosystem the most comprehensive and well supported of Twitter packages is rtweet developed by Michael Kearney and part of the rOpenSci initiative. The rtweet package provides R functions to both authenticate and collect timelines, tweets and other metadata using Twitter’s v1.1 standard and premium API’s.\r\nThe VOSON Lab develops and maintains the open source R packages vosonSML and VOSONDash. These were created to integrate online data collection, network generation and analysis into a consistent and easy to use work flow across many popular web and social media platforms. For Twitter, the vosonSML package provides an interface to rtweet’s collection features through which tweets can be searched for and retrieved, and then uses this data to produce networks. There may be cases however, such as in the collection of streaming data or analysis of previously collected twitter data where you haven’t used vosonSML’s collection function but instead simply wish to produce vosonSML generated networks from your rtweet data. Because vosonSML uses rtweet this is easily achievable and with minimal R coding.\r\nAPI Authentication\r\nAccessing the Twitter API to collect tweets requires authentication via a Twitter app. There are generally two ways this can be achieved, you can apply for a Twitter Developer account and create your own app (and access keys) or you can authorize another persons app to access the API on your behalf (using their keys). The latter still requires your own Twitter user account but you do not need to go through the Developer application or app creation process. The vosonSML package requires users to create their own app and use their own keys but the rtweet package supports both methods, and you can collect tweets after a simple one-time web authorization step of their embedded rstats2twitter app.\r\nTwitter Data Collection with rtweet\r\nThe following simple example will demonstrate how to use the rtweet package to collect some tweet data using built-in authentication via the rtweet app.\r\nSearch Collection\r\nA fairly standard tweet collection usually involves using the Twitter Search API end-point to search for past tweets that meet a certain criteria. This can be done with rtweet and the search_tweets function with the criteria set by passing additional parameters. In our example we will direct the API to search and return 100 tweets (n = 100) containing the hashtag #auspol and excluding any retweets (include_rts = FALSE). By default only the most recent tweets within the last 7 days will be returned by the API.\r\n\r\n\r\n\r\n\r\n\r\nlibrary(rtweet)\r\n\r\n# recent tweet search collection\r\nauspol_tweets <- search_tweets(\"#auspol\", n = 100, include_rts = FALSE)\r\n\r\n\r\n\r\nThe first time rtweet collection functions are run they will open a Twitter web page on your default web browser asking permission to authorize rstats2twitter.\r\n\r\n\r\n\r\nFigure 1: rstats2twitter app authorization\r\n\r\n\r\n\r\nIf API authentication and search succeeds then the search_tweets function will return a data frame of tweet data. The data frame will have up to 100 rows, one for each tweet collected and 90 columns for associated tweet metadata:\r\n\r\n\r\nlibrary(tibble)\r\n\r\n# print the first 2 rows\r\nprint(head(auspol_tweets, n = 2))\r\n\r\n\r\n# A tibble: 2 x 90\r\n  user_id  status_id  created_at          screen_name text      source\r\n  <chr>    <chr>      <dttm>              <chr>       <chr>     <chr> \r\n1 27007685 136400068~ 2021-02-22 23:54:39 ronthorp    \"@janeen~ Twitt~\r\n2 1359301~ 136400067~ 2021-02-22 23:54:37 InjuredNsw  \"When th~ Twitt~\r\n# ... with 84 more variables: display_text_width <dbl>,\r\n#   reply_to_status_id <chr>, reply_to_user_id <chr>,\r\n#   reply_to_screen_name <chr>, is_quote <lgl>, is_retweet <lgl>,\r\n#   favorite_count <int>, retweet_count <int>, quote_count <int>,\r\n#   reply_count <int>, hashtags <list>, symbols <list>,\r\n#   urls_url <list>, urls_t.co <list>, urls_expanded_url <list>,\r\n#   media_url <list>, media_t.co <list>, media_expanded_url <list>,\r\n#   media_type <list>, ext_media_url <list>, ext_media_t.co <list>,\r\n#   ext_media_expanded_url <list>, ext_media_type <chr>,\r\n#   mentions_user_id <list>, mentions_screen_name <list>, lang <chr>,\r\n#   quoted_status_id <chr>, quoted_text <chr>,\r\n#   quoted_created_at <dttm>, quoted_source <chr>,\r\n#   quoted_favorite_count <int>, quoted_retweet_count <int>,\r\n#   quoted_user_id <chr>, quoted_screen_name <chr>,\r\n#   quoted_name <chr>, quoted_followers_count <int>,\r\n#   quoted_friends_count <int>, quoted_statuses_count <int>,\r\n#   quoted_location <chr>, quoted_description <chr>,\r\n#   quoted_verified <lgl>, retweet_status_id <chr>,\r\n#   retweet_text <chr>, retweet_created_at <dttm>,\r\n#   retweet_source <chr>, retweet_favorite_count <int>,\r\n#   retweet_retweet_count <int>, retweet_user_id <chr>,\r\n#   retweet_screen_name <chr>, retweet_name <chr>,\r\n#   retweet_followers_count <int>, retweet_friends_count <int>,\r\n#   retweet_statuses_count <int>, retweet_location <chr>,\r\n#   retweet_description <chr>, retweet_verified <lgl>,\r\n#   place_url <chr>, place_name <chr>, place_full_name <chr>,\r\n#   place_type <chr>, country <chr>, country_code <chr>,\r\n#   geo_coords <list>, coords_coords <list>, bbox_coords <list>,\r\n#   status_url <chr>, name <chr>, location <chr>, description <chr>,\r\n#   url <chr>, protected <lgl>, followers_count <int>,\r\n#   friends_count <int>, listed_count <int>, statuses_count <int>,\r\n#   favourites_count <int>, account_created_at <dttm>,\r\n#   verified <lgl>, profile_url <chr>, profile_expanded_url <chr>,\r\n#   account_lang <lgl>, profile_banner_url <chr>,\r\n#   profile_background_url <chr>, profile_image_url <chr>\r\n\r\nThis contains all of the data necessary for vosonSML to construct Twitter networks.\r\nSave the Data\r\nThere are a few methods of saving data depending on where and how it will be used. Two common methods are to use a text-based file format such as a CSV, or alternatively if the data will be used within R we can save the dataframe object to a binary compressed RDS (R data object) file using saveRDS instead. Conveniently, the rtweet package has a method to save Twitter data to file in CSV format with the write_as_csv function that takes care of Twitter nested data and conversion issues, and saving an RDS file is also very easy as follows.\r\n\r\n\r\n# save data using rtweet write csv\r\nwrite_as_csv(auspol_tweets, \"auspol_tweets.csv\")\r\n\r\n# save data to file as an R data object\r\nsaveRDS(auspol_tweets, \"auspol_tweets.rds\")\r\n\r\n\r\n\r\nCreating Networks with vosonSML\r\nRead the Data\r\nIf the data was saved to file with the rtweet function write_as_csv it can be read again using read_twitter_csv or readRDS if from an RDS file.\r\n\r\n\r\nauspol_tweets <- read_twitter_csv(\"auspol_tweets.csv\")\r\n\r\nauspol_tweets <- readRDS(\"auspol_tweets.rds\")\r\n\r\n\r\n\r\nPrepare the Data\r\nFor vosonSML to recognize the previously collected data as a Twitter data source and be able to internally route it to the appropriate network functions a minor change needs to be made to the data frame first. This involves adding two attributes datasource and twitter to the class list of the auspol_tweets data frame object as follows:\r\n\r\n\r\n# original class list\r\nclass(auspol_tweets)\r\n\r\n\r\n[1] \"tbl_df\"     \"tbl\"        \"data.frame\"\r\n\r\n# add to the class list\r\nclass(auspol_tweets) <- append(c(\"datasource\", \"twitter\"), class(auspol_tweets))\r\n\r\n# modified class list\r\nclass(auspol_tweets)\r\n\r\n\r\n[1] \"datasource\" \"twitter\"    \"tbl_df\"     \"tbl\"        \"data.frame\"\r\n\r\nThe order of classes is important and for the data frame to be compatible with dplyr - a very common data manipulation package in R, and subsequently usable in the tidyverse and vosonSML, then the new attributes need to be added to the beginning of the list.\r\nFor versions of vosonSML more recent than 0.29.13 this can now all be managed by using the ImportData function. This method is preferable as it is easier, works for both files and data frames, and will support any future updates to vosonSML without breaking your code.\r\n\r\n\r\n\r\n\r\n\r\nlibrary(vosonSML)\r\n\r\n# use the import data function\r\nauspol_tweets <- ImportData(auspol_tweets, \"twitter\")\r\n\r\n\r\n\r\nPlease note that modifying data frame attributes or importing data is only required for rtweet data and not a necessary step for Twitter data collected using the vosonSML Twitter Collect function.\r\nObject classes in R are a more advanced topic and not required knowledge to use vosonSML but if you would like to learn more a good introduction can be found in the Object-oriented programming chapter of Advanced R by Hadley Wickham.\r\nCreate the Network\r\nThe tweet data can now be used to create the nodes and edges network data, and a graph by using the vosonSML Create and Graph functions:\r\n\r\n\r\n# create the network data\r\nauspol_actor_network <- Create(auspol_tweets, \"actor\")\r\n\r\n\r\nGenerating twitter actor network...\r\n-------------------------\r\ncollected tweets | 100\r\nretweets         | 0 \r\nquoting others   | 18\r\nmentions         | 28\r\nreply mentions   | 17\r\nreplies          | 28\r\nself-loops       | 42\r\nnodes            | 149\r\nedges            | 133\r\n-------------------------\r\nDone.\r\n\r\n\r\n\r\n# create an igraph\r\nauspol_actor_graph <- Graph(auspol_actor_network)\r\n\r\n\r\nCreating igraph network graph...Done.\r\n\r\nThat’s all there is to it, and now the resulting igraph network can be plotted.\r\n\r\n\r\nlibrary(igraph)\r\n\r\n# set plot margins\r\npar(mar = c(0, 0, 0, 0))\r\n\r\n# auspol actor network with fruchterman-reingold layout\r\nplot(auspol_actor_graph, layout = layout_with_fr(auspol_actor_graph),\r\n     vertex.label = NA, vertex.size = 6, edge.arrow.size = 0.4)\r\n\r\n\r\n\r\n\r\nFigure 2: Actor network graph for collected #auspol tweets\r\n\r\n\r\n\r\nFor further information about rtweet, its features and how to use it to collect twitter data please refer to the package site and introductory rtweet vignette. For creating different types of networks such as the activity, 2-mode and semantic types with vosonSML see the package documentation and introductory vosonSML vignette.\r\n\r\n\r\n\r\n",
    "preview": "posts/2021-02-11_twitter_vsml_from_rtweet/rtweet_logo_preview.png",
    "last_modified": "2021-03-11T00:04:21+11:00",
    "input_file": {},
    "preview_width": 432,
    "preview_height": 499
  },
  {
    "path": "posts/2021-02-05_welcome/",
    "title": "Welcome to the VOSON Lab Coding Blog",
    "description": "The coding blog is a space to share tools, methods, tips, examples and code. A place to collect data, construct and analyse online networks.",
    "author": [
      {
        "name": "VOSONLab",
        "url": "http://vosonlab.net/"
      }
    ],
    "date": "2021-02-04",
    "categories": [
      "Rstats",
      "Social Network Analysis",
      "Computational Social Methods"
    ],
    "contents": "\r\nWelcome to the VOSON Lab Coding Blog! We have created this space to share methods, tips, examples and code. A place to collect data, construct and analyse online networks.\r\nMost of our posts will cover techniques around the tools we have developed at the Lab: vosonSML and VOSONDash, which are available on CRAN and Github. In this space, we also plan to cover other complementary R packages and open-source software such as within the Tidyverse, Shiny, igraph and gephi.\r\nVOSON Lab Open Source Tools\r\nvosonSML is a R package for social media data collection (Twitter, YouTube and Reddit) and network generation. VOSONDash is a Shiny app which integrates tools for visualizing and manipulating network graphs, performing network and text analysis, and a collection interface for vosonSML.\r\nMore information on these tools can be found on their GitHub pages: vosonSML and VOSONDash.\r\nFor more detailed information, check the vosonSML Vignette and the VOSON Dash Userguide.\r\nWe hope you find this information useful!\r\nThe VOSON Lab team.\r\nVirtual Observatory for the Study of Online Networks VOSON Lab, School of Sociology, The Australian National University.\r\n\r\n\r\n\r\n",
    "preview": "posts/2021-02-05_welcome/VOSON-tools.png",
    "last_modified": "2021-03-11T00:05:53+11:00",
    "input_file": {},
    "preview_width": 800,
    "preview_height": 390
  }
]
